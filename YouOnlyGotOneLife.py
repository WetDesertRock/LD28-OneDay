#####  Color Palette by Color Scheme Designer
#####  Palette URL: http://colorschemedesigner.com/#2Z31Tw0w0w0w0
#####  Color Space: RGB; 
# *** Primary Color:
# 
#    var. 1 = #00B64F = rgb(0,182,79)
#    var. 2 = #22884F = rgb(34,136,79)
#    var. 3 = #007633 = rgb(0,118,51)
#    var. 4 = #37DA7E = rgb(55,218,126)
#    var. 5 = #62DA97 = rgb(98,218,151)
# 
# *** Secondary Color A:
# 
#    var. 1 = #FF8900 = rgb(255,137,0)
#    var. 2 = #BF7D30 = rgb(191,125,48)
#    var. 3 = #A65900 = rgb(166,89,0)
#    var. 4 = #FFA640 = rgb(255,166,64)
#    var. 5 = #FFBE73 = rgb(255,190,115)
# 
# *** Secondary Color B:
# 
#    var. 1 = #DC0055 = rgb(220,0,85)
#    var. 2 = #A52959 = rgb(165,41,89)
#    var. 3 = #8F0037 = rgb(143,0,55)
#    var. 4 = #EE3B80 = rgb(238,59,128)
#    var. 5 = #EE6B9E = rgb(238,107,158)
#####  Generated by Color Scheme Designer (c) Petr Stanicek 2002-2010

import pygame, time

pygame.display.init()
screen = pygame.display.set_mode((576, 576))
Clock = pygame.time.Clock()

running = True

D_UP = -1
D_DOWN = 1
D_RIGHT = 2
D_LEFT = -2

class World(object):
    def __init__(self,gsize,sp):
        self.gridsize = gsize #Avaliable sizes: 1, 2, 3, 4, 6, 8, 9, 12, 16, 18, 24, 32, 36, 48, 64, 72, 96, 144, 192, 288
        self.spawnpoint = sp

class Player(object):
    def __init__(self):
        self.history = []
        self.curpos = [10,10]
    
    def move(self,d):
        if d == D_UP or d == D_DOWN:
            self.curpos[1] += (d/abs(d))*30
        elif d == D_RIGHT or d == D_LEFT:
            self.curpos[0] += (d/abs(d))*30

plr = Player()
        
        

while running:
	Clock.tick(60)
	event = pygame.event.poll()
	if event.type == pygame.QUIT:
		running = False
		
	elif event.type == pygame.KEYDOWN:
		if event.key == pygame.K_ESCAPE:
			running = False
		
		elif event.key == pygame.K_s:
			stime = time.time()
			pygame.image.save(screen, "Screenshot_%d.png" % stime)
			print "Wrote Screenshot_%d.png" % stime
		
		elif event.key == pygame.K_UP:
		    plr.move(D_UP)
		elif event.key == pygame.K_DOWN:
		    plr.move(D_DOWN)
		elif event.key == pygame.K_RIGHT:
		    plr.move(D_RIGHT)
		elif event.key == pygame.K_LEFT:
		    plr.move(D_LEFT)
	
	screen.fill((0,182,79))
	pygame.draw.rect(screen,(255,190,115),(plr.curpos,(30,30)))
	
	pygame.display.update()